<% if Redmine::DefaultData::Loader::no_data? %>
<% else %>
<p><strong><%= t 'This is your Redmine administration panel', :app_name => Setting.plugin_redmine_tour['app_name'] %></strong>.</p>
<p><%= t 'You can use it to configure how your Redmine works You can come here at any time to change your Redmine configuration', :app_name => Setting.plugin_redmine_tour['app_name'] %></p>

	<% if Project.active.count == 0 %>
	<p><%= t 'Now lets start by adding a project Please click on X next to the X label below', :new => content_tag(:em, content_tag(:strong, t(:label_project_new))), :projects => content_tag(:em, content_tag(:strong, t(:label_project_plural)))%></p>
	<% elsif User.active.count == 1 %>
	<p><%= t 'Redmine is great for personal use, but it really shines when you use it with your co-workers', :app_name => Setting.plugin_redmine_tour['app_name'] %></p>
	<p><%= t 'Please click on X next to the X label below to invite another user to your Redmine', :app_name => Setting.plugin_redmine_tour['app_name'], :new => content_tag(:em, content_tag(:strong, t(:label_user_new))), :users => content_tag(:em, content_tag(:strong, t(:label_user_plural)))%></p>
  <% else %>
  <p><%= t 'You have already used the Projects and Users sections when you first set up your Redmine instance', :projects => content_tag(:strong, content_tag(:em, t(:label_project_plural))), :users => content_tag(:strong, content_tag(:em, t(:label_user_plural))), :project_limit => RedmineTenantable::AmaClient::project_limit, :user_limit => RedmineTenantable::AmaClient::user_limit, :app_name => Setting.plugin_redmine_tour['app_name'] %></p>
  <p><%= t 'The Roles and Permissions section allows you to define or modify generic user roles by selecting from a range of available permissions Subsequently when assigning users to projects you can select from these roles in order to apply the selected permissions in this context', :roles_and_permissions => content_tag(:strong, content_tag(:em, t(:label_role_and_permissions))) %></p>
  <p><%= t 'Trackers are global issue categories The tracker name is used in headlines and email notifications Plus it defines the workflow for its issues', :trackers => content_tag(:strong, content_tag(:em, t(:label_tracker_plural))), :tracker_limit => RedmineTenantable::AmaClient::tracker_limit %></p>
  <p><%= t 'The sections issue statuses and workflow help you streamline the way your team works Use the issue statuses section to define and update the different states an issue can have and define which status transitions team members are able to perform according to their respective roles', :issue_statuses => content_tag(:strong, content_tag(:em, t(:label_issue_status_plural))), :workflow => content_tag(:strong, content_tag(:em, t(:label_workflow))) %></p>
  <p><%= t 'Custom fields are a powerful feature which allows you to customize the great majority of objects in Redmine For almost every object you can define additional text, number, date fields, checkboxes or drop down lists and optionally require your users to fill them out before the respective object can be saved', :custom_fields => content_tag(:strong, content_tag(:em, t(:label_custom_field_plural))), :app_name => Setting.plugin_redmine_tour['app_name'] %></p>
  <p><%= t 'The Enumerations section lets you define miscellaneous value lists such as activities, document categories, and issue priorities', :enumerations => content_tag(:strong, content_tag(:em, t(:label_enumerations))), :enumeration_activities => t(:enumeration_activities), :enumeration_doc_categories => t(:enumeration_doc_categories), :enumeration_issue_priorities => t(:enumeration_issue_priorities) %></p>
  <p><%= t 'Finally, the Settings section lets you define a large number of general parameters regarding your Redmine instance', :app_name => Setting.plugin_redmine_tour['app_name'], :settings => content_tag(:strong, content_tag(:em, t(:label_settings))) %></p>
	<% end %>

<% end %>
	
	
